# -*- coding: utf-8 -*-
"""python assessment.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1npVP0LjKHE_Dmel9mMeNULfWqcUSQJ1M
"""

import numpy as np
arr = np.array([1, 2, 3, 4, 5, 6])
arr_2d = arr.reshape(2, -1)
print(arr_2d)

a = np.array([1, 2, 3, 4, 5])
b = np.array([4, 5, 6, 7, 8])
common = np.intersect1d(a, b)
print(common)

a = np.array([2, 6, 1, 9, 10, 3, 27])
result = a[(a >= 5) & (a <= 10)]
print(result)

a = np.arange(15)
np.set_printoptions(threshold=6)
print(a)

import pandas as pd

ser = pd.Series([1, 3, 5, 7, 9, 11, 13, 15])
minimum = ser.min()
percentile_25 = ser.quantile(0.25)
median = ser.median()
percentile_75 = ser.quantile(0.75)
maximum = ser.max()
print("Minimum:", minimum)
print("25th Percentile:", percentile_25)
print("Median:", median)
print("75th Percentile:", percentile_75)
print("Maximum:", maximum)

data = {
    'Name': ['Alice', 'Bob', 'Charlie', 'David'],
    'Age': [25, 30, 35, 40],
    'City': ['New York', 'Los Angeles', 'Chicago', 'Houston']
}

df = pd.DataFrame(data)

print("Manual DataFrame:")

data = np.random.randint(1, 100, size=(5, 3))
df = pd.DataFrame(data, columns=['Column1', 'Column2', 'Column3'])
print("Pandas DataFrame from NumPy array:")
print(df)

data = np.arange(12).reshape(3, 4)
df = pd.DataFrame(data)
print(df)

df = pd.read_csv('your_file.csv')
print(df.head())
print(df.info())
print(df.describe())
text_cols = df.select_dtypes(include='object').columns
for col in text_cols:
    print(f"\nColumn '{col}' value counts:")
    print(df[col].value_counts().head())
print(df.isnull().sum())
num_cols = df.select_dtypes(include=np.number).columns
df[num_cols] = df[num_cols].fillna(df[num_cols].mean())
df[text_cols] = df[text_cols].fillna('Unknown')
filtered_df = df[df['col1'] > 50]
print(filtered_df.head())
df['total'] = df['col2'] + df['col3']
df['text_col'] = df['text_col'].str.lower()
df.to_csv('cleaned_file.csv', index=False)

data = {
    'Name': ['Alice', 'Bob', 'Charlie', 'David'],
    'Age': [25, 30, 35, 40],
    'City': ['New York', 'Los Angeles', 'Chicago', 'Houston']
}
df = pd.DataFrame(data)
rows, columns = df.shape
print("Number of rows:", rows)
print("Number of columns:", columns)

data = {
    'Name': ['Alice', 'Bob', 'Charlie', 'David', 'Eva'],
    'Age': [25, 30, 35, 40, 28],
    'City': ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Miami']
}

df = pd.DataFrame(data)
print(df.head())

import seaborn as sns

diamonds = sns.load_dataset('diamonds')
carat_column = diamonds['carat']
print(type(carat_column))

import matplotlib.pyplot as plt
x = [3, 4, 5, 6]
y = [1.5, 2, 2.5, 3]
plt.plot(x, y, marker='o')
plt.xlabel('X')
plt.ylabel('Y')
plt.title('Line Plot of X vs Y')
plt.show()

height = [179, 155, 191, 152, 188, 177]
names = ['QA', 'WB', 'EC', 'RD', 'TE', 'YF']
plt.bar(names, height, color='skyblue')
plt.title("Height Comparison")
plt.xlabel("Individuals")
plt.ylabel("Height (cm)")
plt.show()

x = np.random.randn(100000)
plt.figure(figsize=(12, 4))
plt.subplot(1, 3, 1)
plt.hist(x, bins=10, color='skyblue', edgecolor='black')
plt.title('Histogram with 10 bins')
plt.subplot(1, 3, 2)
plt.hist(x, bins=20, color='lightgreen', edgecolor='black')
plt.title('Histogram with 20 bins')
plt.subplot(1, 3, 3)
plt.hist(x, bins=50, color='salmon', edgecolor='black')
plt.title('Histogram with 50 bins')
plt.tight_layout()
plt.show()